export default {
  category: 'Category|Categories',
  missing_value: 'Missing value|Missing values',
  phenotype_group: 'Phenotype group|Phenotype groups',
  single_phenotype: 'Single phenotype|Single phenotypes',
  combined_phenotype: 'Combined phenotype|Combined phenotypes',
  derived_phenotype: 'Derived phenotype|Derived phenotypes',
  single_restriction: 'Single restriction|Single restrictions',
  combined_restriction: 'Combined restriction|Combined restrictions',
  derived_restriction: 'Derived restriction|Derived restrictions',
  dataType: 'Data Type|Data Types',
  number: 'Number|Numbers',
  boolean: 'Boolean',
  date: 'Date|Dates',
  date_time: 'Date and Time|Dates and Times',
  timestamp: 'Timestamp',
  string: 'Text|Texts',
  title: 'Title|Titles',
  describingMetadata: 'Describing Metadata',
  synonym: 'Synonym|Synonyms',
  description: 'Description|Descriptions',
  ok: 'OK',
  cancel: 'Cancel',
  entry: 'Entry|Entries',
  addThing: 'Add {thing}',
  oneThingPerThing: 'There can only exist one {thing1} per {thing2}!',
  language: 'Language|Languages',
  remove: 'Remove',
  delete: 'Delete',
  score: 'Score',
  component: 'Component',
  restriction: 'Restriction',
  expression: 'Expression',
  class: 'Class',
  union: 'Union',
  intersection: 'Intersection',
  complement: 'Complement',
  and: 'and',
  or: 'or',
  not: 'not',
  expand: 'Expand',
  clearAll: 'Clear all',
  show: 'Show',
  filter: 'Filter',
  operator: 'Operator',
  operand: 'Operand',
  setting: 'Setting|Settings',
  indentWithSpaces: 'Indent with spaces',
  confirmClearExpression: 'Please confirm that you want to delete the current expression.',
  confirmDiscardChanges: 'Please confirm that you want to discard the current changes.',
  selectThing: 'Select {thing}',
  save: 'Save',
  reset: 'Reset',
  entity: 'Entity|Entities',
  value: 'Value|Values',
  enumeration: 'Enumeration|Enumerations',
  valueRange: 'Value range|Value ranges',
  pleaseWait: 'Please wait',
  reload: 'Reload',
  dismiss: 'Dismiss',
  notFound: 'Not found',
  negated: 'Negated',
  quantor: 'Quantor|Quantors',
  loading: 'Loading',
  unnamedEntity: 'Unnamed entity',
  showThing: 'Show {thing}',
  createThing: 'Create {thing}',
  thingSaved: '{thing} has been saved',
  deleteThing: 'Delete {thing}',
  thingDeleted: '{thing} has been deleted',
  editThing: 'Edit {thing}',
  help: 'Help',
  version: 'Version|Versions',
  versionHistory: 'Version history',
  noDataPresent: 'No data present',
  close: 'Close',
  author: 'Author',
  restoreThing: 'Restore {thing}',
  invalid: 'Invalid',
  valid: 'Valid',
  unit: 'Unit|Units',
  developPhenotype: 'Develop Phenotype|Develop Phenotypes',
  repository: 'Repository|Repositories',
  organisation: 'Organisation|Organisations',
  collaborativeWork: 'Collaborative Work',
  formula: 'Formula|Formulas',
  closeAll: 'Close all',
  code: 'Code|Codes',
  condition: 'Condition|Conditions',
  squareRoot: 'Square root',
  exponent: 'Exponent|Exponents',
  base: 'Base|Bases',
  addition: 'Addition|Additions',
  subtraction: 'Subtraction|Subtractions',
  multiplication: 'Multiplication|Multiplications',
  division: 'Division|Divisions',
  searchThing: 'Search {thing}',
  home: 'Home',
  navigation: 'Navigation',
  createdAt: 'Created at',
  name: 'Name',
  notSavedJet: 'Not saved jet!',
  entityEditor: {
    rawBtn: {
      label: 'Show entity data as JSON'
    },
    rawDialog: {
      content: 'Current state of the entity'
    },
    titlesHelp: 'You can enter exactly one title per language. The titles should be short and comprehensible. '
      + 'When displaying an entity, the title appropriate for the current language setting is selected. '
      + 'If no suitable title is specified for the language setting, the first entry in the list is used.',
    synonymsHelp: 'Synonyms are alternative names for entities. For example, the phenotype "BMI" could have the synonym "Body Mass Index".',
    descriptionsHelp: 'Here you can specify further descriptions or definitions of the entity in different languages.',
    codesHelp: 'In this section, specify links to taxonomies (e.g. SNOMED CT) so that the phenotype is mapped to the standards and can be linked to other IT systems. '
      + 'In this way, on the one hand, data from other sources can be read in and used for phenotyping. '
      + 'On the other hand, results can be fed back to external IT systems.',
    formulaHelp: 'Mathematical formulas can be entered here to calculate the values of the phenotype. Formulas can contain other phenotypes as well as constants.',
    restrictionHelp: 'Specify the restrictions to be applied to values of the phenotype. To do this, please first select a suitable quantor. '
      + 'Then you have to choose between value range (with minimum and/or maximum) or enumeration (any number of predefined values) for the type of restriction. '
      + 'No restriction type can be selected for the quantifiers "Values present" and "No values present" because the restriction of the values is implicit.',
    expressionHelp: 'To define restrictions for combined phenotypes. A Boolean expression must be specified. '
      + 'The expression can contain unions (OR), intersections (AND) and complements (NOT) of phenotypes. '
      + 'Click the plus button to add components to the expression. You can also click on already added components to modify or remove them.'
  },
  organisationPage: {
    description: 'Manage your organisations or create new ones.'
  },
  entityTree: {
    listDescription: 'Switch between the tree view with categories and the list view without categories.',
    noNodesLabel: 'There are no entities.',
    noResultsLabel: 'The filtering has no results.'
  },
  entitySearchInput: {
    description: 'Enter at least {minLength} characters to search for matching {types}.',
    emptyResult: 'No matching {types} could be found.'
  },
  ucumCard: {
    help: 'Enter a unit or a unit designation. A list of suggestions will then be displayed from which you can select the appropriate UCUM unit.'
  },
  quantorType: {
    none: 'No values present',
    exists: 'Values present',
    some: 'At least one value in range',
    all: 'All values in range',
  }
};
